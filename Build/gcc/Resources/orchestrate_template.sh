#!/bin/bash

# This script sets up the (runtime) environment for the Orchestrator to operate
# in, then starts the Orchestrator.
#
# Note that this script will not work correctly if you move any of the
# dependencies, or the build artefacts. In that case, you're on your own (or
# you can just rebuild).
#
# This script is generated by the build process using a templating
# mechanism. The double-curly braces indicate where the build process will
# substitute in variable names to create the executable. There should be no
# double-curly braces in the output version of this file.

export RISCV_DIR=
export PATH="{{ MPICH_DIR }}/bin:$RISCV_DIR/bin:$PATH"
export TRIVIAL_LOG_HANDLER=1
export LM_LICENSE_FILE=:27012@localhost:27001@localhost
source "/local/ecad/setup-quartus17v0.bash"

# Paths for dynamically-linked libraries.
MPI_LIB_DIR="{{ MPICH_LIB_DIR }}"
QT_LIB_DIR="{{ QT_LIB_DIR }}"
JTAG_LIB_DIR="{{ JTAG_LIB_DIR }}"
SUPERVISOR_LIB_DIR="{{ SUPERVISOR_LIB_DIR }}"
GCC_LIB_DIR="{{ GCC_LIB_DIR }}"
INTERNAL_LIB_PATH=./:"$QT_LIB_DIR":"$MPI_LIB_DIR":\
"$GCC_LIB_DIR":"$SUPERVISOR_LIB_DIR":"$JTAG_LIB_DIR"

# Running the Orchestrator from the build directory.
pushd "{{ EXECUTABLE_DIR }}" > /dev/null
mpiexec.hydra -genv LD_LIBRARY_PATH "$INTERNAL_LIB_PATH" \
    -n 1 ./root : \
    -n 1 ./logserver : \
    -n 1 ./rtcl : \
    -n 1 ./mothership
popd > /dev/null
